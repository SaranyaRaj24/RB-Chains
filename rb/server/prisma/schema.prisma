generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model LotInfo {
  id                    Int      @id @default(autoincrement())
  lot_name              String
  lot_before_weight     Float?
  lot_after_weight      Float?
  lot_difference_weight Float?
  lot_comments          String?
  is_completed          Boolean   @default(false)
  master_id             Int?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  MasterProcess         MasterProcess? @relation(fields: [master_id], references: [id])
  items                 Item[] @relation("ItemLotInfos") 
  AttributeValues       AttributeValue[] 

  @@map("lotInfo")
}
model CustomerInfo {
  customer_id        Int    @id @default(autoincrement())
  customer_name      String
  customer_shop_name String?
  phone_number       String?
  address            String?
  MasterOrders       MasterOrder[]

  @@map("customerInfo")
}

model MasterProcess {
  id                Int      @id @default(autoincrement())
  process_name      String
  LotInfos          LotInfo[]       
  MasterProcessMappers MasterProcessMapper[]
  ProcessSteps      ProcessSteps[]   
  @@map("masterProcess")
}

model MasterProcessMapper {
  id                 Int       @id @default(autoincrement())
  master_id          Int
  process_id         Int
  process_order_sort Int

  MasterProcess      MasterProcess @relation(fields: [master_id], references: [id])
  LotProcess         LotProcess    @relation(fields: [process_id], references: [id])

  @@map("masterProcessMapper")
}

model AttributeInfo {
  attribute_id      Int      @id @default(autoincrement())
  attribute_type    String
  attribute_name    String
  ProcessSteps      ProcessSteps[]     
  AttributeValues   AttributeValue[]  

  @@map("attributeInfo")
}

model LotProcess {
  id                Int      @id @default(autoincrement())
  process_name      String
  process_description String?
  MasterProcessMappers MasterProcessMapper[] 
  ProcessSteps      ProcessSteps[]    
  attribute         AttributeValue[]  
  @@map("LotProcess")
}

model ProcessSteps {
  id                Int          @id @default(autoincrement())
  process_id        Int
  attribute_id      Int
  created_at        DateTime     @default(now())
  updated_at        DateTime     @updatedAt

  LotProcess        LotProcess   @relation(fields: [process_id], references: [id])
  AttributeInfo     AttributeInfo @relation(fields: [attribute_id], references: [attribute_id])  
  master            MasterProcess[]
  @@map("processSteps")
}

model AttributeValue {
  id              Int         @id @default(autoincrement())
  lot_id          Int
  process_id      Int
  items_id        Int         
  value           Float

  LotInfo         LotInfo     @relation(fields: [lot_id], references: [id])
  LotProcess      LotProcess  @relation(fields: [process_id], references: [id])

  Item            Item        @relation(fields: [items_id], references: [item_id]) 
  attribute       AttributeInfo[] 
  @@map("attributeValue")
}

model Item {
  item_id        Int             @id @default(autoincrement())
  lot_id         Int
  item_type      String

  LotInfo      LotInfo[]       @relation("ItemLotInfos")  
  AttributeValues AttributeValue[] 
  ProductStocks  ProductStocks[]  
  OrderItems     OrderItem[]     

  @@map("item")
}

model ProductStocks {
  id              Int      @id @default(autoincrement())
  item_id         Int
  product_status  String

  Item            Item     @relation(fields: [item_id], references: [item_id])  

  @@map("ProductStocks")
}

model MasterOrder {
  id                Int      @id @default(autoincrement())
  order_status      String
  customer_id       Int
  total_price       Float
  created_at        DateTime @default(now())
  updated_at        DateTime @updatedAt

  CustomerInfo      CustomerInfo @relation(fields: [customer_id], references: [customer_id])  
  OrderItems        OrderItem[] 

  @@map("masterOrder")
}

model OrderItem {
  id          Int      @id @default(autoincrement())
  order_id    Int
  stock_id    Int      
  final_price Int
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  MasterOrder MasterOrder @relation(fields: [order_id], references: [id])
  Item        Item        @relation(fields: [stock_id], references: [item_id]) 

  @@map("orderItems")
}
